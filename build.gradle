buildscript {
    ext {
        springBootVersion = '3.1.1'
        lombokVersion = '1.18.24'
        queryDslVersion = '5.0.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group 'jp.or.miya'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-devtools:3.0.4")
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.2')
    // spring-boot-security
    implementation("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    testImplementation("org.springframework.security:spring-security-test:6.0.2")
    // jwt
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    implementation("io.jsonwebtoken:jjwt-impl:0.11.5")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")
    // jpa
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    // QueryDsl
    implementation("com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta")
    annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
    annotationProcessor('jakarta.annotation:jakarta.annotation-api:2.1.1') // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
    annotationProcessor("jakarta.persistence:jakarta.persistence-api:3.1.0") // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    // mariaDB
    implementation('org.mariadb.jdbc:mariadb-java-client:3.1.2')
    // auto reload
    implementation("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
    // Redis
    implementation("org.springframework.boot:spring-boot-starter-data-redis:3.0.4")
    // validation
    implementation("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")

    implementation("org.projectlombok:lombok:${lombokVersion}")
    testImplementation("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    // H2
    //runtimeOnly("com.h2database:h2")
    implementation 'com.h2database:h2:2.1.214'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

compileJava.options.encoding = 'UTF-8'

// QueryDsl Setting
def generated = 'src/main/generated' // generated 폴더 경로
// QueryDsl QClass 파일 생성 위치
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
    options.encoding = 'UTF-8'
}
// java source set 에 queryDsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}
// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

test {
    useJUnitPlatform()
}